import React, { useState } from 'react';
import { Package, AlertTriangle, TrendingUp, Truck, Factory, ChevronDown, Search, Plus, Filter } from 'lucide-react';

const SistemaEstoqueIntegrado = () => {
  const [activeTab, setActiveTab] = useState('dashboard');
  const [searchTerm, setSearchTerm] = useState('');

  // Dados mockados
  const materiaPrima = [
    { id: 1, nome: 'Farinha de Trigo', estoque: 1500, minimo: 500, unidade: 'kg', status: 'ok', custo: 2.50 },
    { id: 2, nome: 'Açúcar', estoque: 200, minimo: 300, unidade: 'kg', status: 'baixo', custo: 3.20 },
    { id: 3, nome: 'Ovos', estoque: 800, minimo: 200, unidade: 'unid', status: 'ok', custo: 0.45 },
    { id: 4, nome: 'Manteiga', estoque: 150, minimo: 100, unidade: 'kg', status: 'critico', custo: 12.00 },
  ];

  const produtosFabricados = [
    { id: 1, nome: 'Pão Francês', estoque: 2000, demandaDiaria: 800, capacidadeProducao: 1200, unidade: 'unid' },
    { id: 2, nome: 'Bolo de Chocolate', estoque: 50, demandaDiaria: 30, capacidadeProducao: 60, unidade: 'unid' },
    { id: 3, nome: 'Croissant', estoque: 120, demandaDiaria: 100, capacidadeProducao: 150, unidade: 'unid' },
  ];

  const entregas = [
    { id: 1, destino: 'Supermercado A', capacidade: 1000, ocupacao: 750, status: 'disponivel' },
    { id: 2, destino: 'Restaurante B', capacidade: 500, ocupacao: 500, status: 'completo' },
    { id: 3, destino: 'Padaria C', capacidade: 800, ocupacao: 200, status: 'disponivel' },
  ];

  const getStatusColor = (status) => {
    switch (status) {
      case 'ok': return 'bg-green-100 text-green-800';
      case 'baixo': return 'bg-yellow-100 text-yellow-800';
      case 'critico': return 'bg-red-100 text-red-800';
      case 'disponivel': return 'bg-blue-100 text-blue-800';
      case 'completo': return 'bg-gray-100 text-gray-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const Dashboard = () => (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div className="bg-white p-6 rounded-lg shadow-md border-l-4 border-blue-500">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Matéria-Prima</p>
              <p className="text-2xl font-semibold text-gray-900">24 itens</p>
            </div>
            <Package className="h-8 w-8 text-blue-500" />
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-lg shadow-md border-l-4 border-green-500">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Prod. Acabados</p>
              <p className="text-2xl font-semibold text-gray-900">2.170 un</p>
            </div>
            <Factory className="h-8 w-8 text-green-500" />
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg shadow-md border-l-4 border-yellow-500">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Cap. Produção</p>
              <p className="text-2xl font-semibold text-gray-900">85%</p>
            </div>
            <TrendingUp className="h-8 w-8 text-yellow-500" />
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg shadow-md border-l-4 border-purple-500">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Entregas Hoje</p>
              <p className="text-2xl font-semibold text-gray-900">8 rotas</p>
            </div>
            <Truck className="h-8 w-8 text-purple-500" />
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white p-6 rounded-lg shadow-md">
          <h3 className="text-lg font-semibold mb-4 flex items-center">
            <AlertTriangle className="mr-2 text-orange-500" />
            Alertas Críticos
          </h3>
          <div className="space-y-3">
            <div className="flex items-center justify-between p-3 bg-red-50 rounded-lg">
              <span className="text-sm font-medium">Manteiga - Estoque Crítico</span>
              <span className="px-2 py-1 bg-red-100 text-red-800 text-xs rounded">Urgente</span>
            </div>
            <div className="flex items-center justify-between p-3 bg-yellow-50 rounded-lg">
              <span className="text-sm font-medium">Açúcar - Abaixo do Mínimo</span>
              <span className="px-2 py-1 bg-yellow-100 text-yellow-800 text-xs rounded">Atenção</span>
            </div>
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg shadow-md">
          <h3 className="text-lg font-semibold mb-4">Eficiência de Produção</h3>
          <div className="space-y-4">
            {produtosFabricados.map(produto => {
              const eficiencia = (produto.estoque / produto.demandaDiaria * 100);
              return (
                <div key={produto.id} className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-sm font-medium">{produto.nome}</span>
                    <span className="text-sm text-gray-500">{eficiencia.toFixed(0)}%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className={`h-2 rounded-full ${eficiencia > 200 ? 'bg-green-500' : eficiencia > 100 ? 'bg-yellow-500' : 'bg-red-500'}`}
                      style={{ width: `${Math.min(eficiencia, 100)}%` }}
                    />
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      </div>
    </div>
  );

  const MateriaPrimaTab = () => (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold">Gestão de Matéria-Prima</h2>
        <button className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center">
          <Plus className="mr-2 h-4 w-4" />
          Adicionar Item
        </button>
      </div>

      <div className="bg-white rounded-lg shadow-md overflow-hidden">
        <div className="p-6 border-b">
          <div className="flex justify-between items-center">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />
              <input
                type="text"
                placeholder="Buscar matéria-prima..."
                className="pl-10 pr-4 py-2 border rounded-lg w-64"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
            </div>
            <button className="flex items-center px-4 py-2 border rounded-lg hover:bg-gray-50">
              <Filter className="mr-2 h-4 w-4" />
              Filtrar
            </button>
          </div>
        </div>

        <div className="overflow-x-auto">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Item</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estoque Atual</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estoque Mínimo</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Custo Unit.</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ações</th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {materiaPrima.map((item) => (
                <tr key={item.id} className="hover:bg-gray-50">
                  <td className="px-6 py-4 whitespace-nowrap">
                    <div className="text-sm font-medium text-gray-900">{item.nome}</div>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <div className="text-sm text-gray-900">{item.estoque.toLocaleString()} {item.unidade}</div>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <div className="text-sm text-gray-900">{item.minimo.toLocaleString()} {item.unidade}</div>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(item.status)}`}>
                      {item.status === 'ok' ? 'Normal' : item.status === 'baixo' ? 'Baixo' : 'Crítico'}
                    </span>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    R$ {item.custo.toFixed(2)}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <button className="text-blue-600 hover:text-blue-900 mr-3">Editar</button>
                    <button className="text-green-600 hover:text-green-900">Repor</button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );

  const ProducaoTab = () => (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold">Capacidade de Produção</h2>
        <button className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center">
          <Factory className="mr-2 h-4 w-4" />
          Nova Produção
        </button>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {produtosFabricados.map((produto) => {
          const utilizacao = (produto.estoque / produto.capacidadeProducao) * 100;
          const coberturaDias = produto.estoque / produto.demandaDiaria;
          
          return (
            <div key={produto.id} className="bg-white p-6 rounded-lg shadow-md">
              <h3 className="text-lg font-semibold mb-4">{produto.nome}</h3>
              
              <div className="space-y-4">
                <div>
                  <div className="flex justify-between text-sm">
                    <span>Estoque Atual</span>
                    <span className="font-medium">{produto.estoque} {produto.unidade}</span>
                  </div>
                </div>

                <div>
                  <div className="flex justify-between text-sm">
                    <span>Demanda Diária</span>
                    <span className="font-medium">{produto.demandaDiaria} {produto.unidade}</span>
                  </div>
                </div>

                <div>
                  <div className="flex justify-between text-sm mb-2">
                    <span>Capacidade de Produção</span>
                    <span className="font-medium">{produto.capacidadeProducao} {produto.unidade}/dia</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className="h-2 bg-blue-500 rounded-full"
                      style={{ width: `${utilizacao}%` }}
                    />
                  </div>
                  <div className="text-xs text-gray-500 mt-1">{utilizacao.toFixed(1)}% utilizada</div>
                </div>

                <div className={`p-3 rounded-lg ${coberturaDias > 3 ? 'bg-green-50' : coberturaDias > 1 ? 'bg-yellow-50' : 'bg-red-50'}`}>
                  <div className="text-sm font-medium">
                    Cobertura: {coberturaDias.toFixed(1)} dias
                  </div>
                  <div className="text-xs text-gray-600 mt-1">
                    {coberturaDias > 3 ? 'Estoque adequado' : coberturaDias > 1 ? 'Atenção necessária' : 'Produção urgente'}
                  </div>
                </div>

                <button className="w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700">
                  Programar Produção
                </button>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  );

  const EntregasTab = () => (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold">Capacidade de Entrega</h2>
        <button className="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 flex items-center">
          <Truck className="mr-2 h-4 w-4" />
          Nova Rota
        </button>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {entregas.map((entrega) => {
          const percentualOcupacao = (entrega.ocupacao / entrega.capacidade) * 100;
          
          return (
            <div key={entrega.id} className="bg-white p-6 rounded-lg shadow-md">
              <div className="flex justify-between items-start mb-4">
                <h3 className="text-lg font-semibold">{entrega.destino}</h3>
                <span className={`px-2 py-1 text-xs rounded-full ${getStatusColor(entrega.status)}`}>
                  {entrega.status === 'disponivel' ? 'Disponível' : 'Completo'}
                </span>
              </div>

              <div className="space-y-3">
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span>Ocupação</span>
                    <span>{entrega.ocupacao}/{entrega.capacidade} kg</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className={`h-2 rounded-full ${percentualOcupacao === 100 ? 'bg-red-500' : percentualOcupacao > 80 ? 'bg-yellow-500' : 'bg-green-500'}`}
                      style={{ width: `${percentualOcupacao}%` }}
                    />
                  </div>
                  <div className="text-xs text-gray-500 mt-1">{percentualOcupacao.toFixed(1)}% ocupado</div>
                </div>

                <div className="text-sm text-gray-600">
                  Capacidade disponível: {entrega.capacidade - entrega.ocupacao} kg
                </div>

                <div className="flex space-x-2">
                  <button className="flex-1 bg-blue-600 text-white py-2 px-3 rounded text-sm hover:bg-blue-700">
                    Agendar
                  </button>
                  <button className="flex-1 border border-gray-300 py-2 px-3 rounded text-sm hover:bg-gray-50">
                    Detalhes
                  </button>
                </div>
              </div>
            </div>
          );
        })}
      </div>

      <div className="bg-white p-6 rounded-lg shadow-md">
        <h3 className="text-lg font-semibold mb-4">Resumo de Entregas</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="text-center">
            <div className="text-2xl font-bold text-blue-600">12</div>
            <div className="text-sm text-gray-600">Entregas Programadas</div>
          </div>
          <div className="text-center">
            <div className="text-2xl font-bold text-green-600">8</div>
            <div className="text-sm text-gray-600">Entregas Concluídas</div>
          </div>
          <div className="text-center">
            <div className="text-2xl font-bold text-yellow-600">4</div>
            <div className="text-sm text-gray-600">Em Andamento</div>
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="min-h-screen bg-gray-100">
      {/* Header */}
      <header className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16">
            <div className="flex items-center">
              <div className="flex items-center space-x-4">
                <div className="bg-blue-600 p-2 rounded-lg">
                  <Package className="h-6 w-6 text-white" />
                </div>
                <div>
                  <h1 className="text-xl font-bold text-gray-900">Sistema Integrado</h1>
                  <p className="text-sm text-gray-500">Gestão de Estoque e Produção</p>
                </div>
              </div>
            </div>
            <div className="flex items-center space-x-4">
              <div className="text-sm text-gray-500">Usuário Admin</div>
              <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center">
                <span className="text-white font-medium text-sm">A</span>
              </div>
            </div>
          </div>
        </div>
      </header>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Navigation Tabs */}
        <div className="mb-8">
          <div className="border-b border-gray-200">
            <nav className="-mb-px flex space-x-8">
              {[
                { id: 'dashboard', name: 'Dashboard', icon: TrendingUp },
                { id: 'materia-prima', name: 'Matéria-Prima', icon: Package },
                { id: 'producao', name: 'Produção', icon: Factory },
                { id: 'entregas', name: 'Entregas', icon: Truck },
              ].map((tab) => (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id)}
                  className={`${
                    activeTab === tab.id
                      ? 'border-blue-500 text-blue-600'
                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                  } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center`}
                >
                  <tab.icon className="mr-2 h-4 w-4" />
                  {tab.name}
                </button>
              ))}
            </nav>
          </div>
        </div>

        {/* Tab Content */}
        {activeTab === 'dashboard' && <Dashboard />}
        {activeTab === 'materia-prima' && <MateriaPrimaTab />}
        {activeTab === 'producao' && <ProducaoTab />}
        {activeTab === 'entregas' && <EntregasTab />}
      </div>
    </div>
  );
};

export default SistemaEstoqueIntegrado;